/**
 * Cesium - https://github.com/AnalyticalGraphicsInc/cesium
 *
 * Copyright 2011-2017 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md for full licensing details.
 */
define(["./defined-b9ff0e39","./Check-e6691f86","./freezeObject-2d5b18ce","./defaultValue-199f5aa8","./Math-92bd3539","./Cartesian2-8fa798b8","./defineProperties-ae15c9d5","./objectToQuery-2e382d4d","./Transforms-c1305e13","./RuntimeError-d5522ee3","./WebGLConstants-554ddbe2","./ComponentDatatype-569c1e3e","./when-c208a7cf","./AttributeCompression-4cb3e905","./IntersectionTests-0268f2ee","./Plane-c6867c84","./WebMercatorProjection-3d8e7edb","./createTaskProcessorWorker","./EllipsoidTangentPlane-29b9a994","./OrientedBoundingBox-dd67ef28","./EllipsoidalOccluder-2722e07a","./TerrainEncoding-d3ac3c0e"],function(We,e,t,n,Oe,ke,i,r,Ve,Ye,a,o,s,u,c,d,Ue,h,Le,He,je,De){"use strict";var Ge=Uint16Array.BYTES_PER_ELEMENT,ze=Int32Array.BYTES_PER_ELEMENT,qe=Uint32Array.BYTES_PER_ELEMENT,Qe=Float32Array.BYTES_PER_ELEMENT,Je=Float64Array.BYTES_PER_ELEMENT;function Ke(e,t,i){i=n.defaultValue(i,Oe.CesiumMath);for(var r=e.length,a=0;a<r;++a)if(i.equalsEpsilon(e[a],t,Oe.CesiumMath.EPSILON12))return a;return-1}var Xe=new ke.Cartographic,Ze=new ke.Cartesian3,$e=new ke.Cartesian3,et=new ke.Cartesian3,tt=new Ve.Matrix4;function it(e,t,i,r,a,n,o,s,u,c){for(var d=o.length,h=0;h<d;++h){var l=o[h],g=l.cartographic,m=l.index,p=e.length,I=g.longitude,f=g.latitude;f=Oe.CesiumMath.clamp(f,-Oe.CesiumMath.PI_OVER_TWO,Oe.CesiumMath.PI_OVER_TWO);var v=g.height-n.skirtHeight;n.hMin=Math.min(n.hMin,v),ke.Cartographic.fromRadians(I,f,v,Xe),u&&(Xe.longitude+=s),u?h===d-1?Xe.latitude+=c:0===h&&(Xe.latitude-=c):Xe.latitude+=s;var E=n.ellipsoid.cartographicToCartesian(Xe);e.push(E),t.push(v),i.push(ke.Cartesian2.clone(i[m])),0<r.length&&r.push(r[m]),Ve.Matrix4.multiplyByPoint(n.toENU,E,Ze);var T=n.minimum,C=n.maximum;ke.Cartesian3.minimumByComponent(Ze,T,T),ke.Cartesian3.maximumByComponent(Ze,C,C);var M=n.lastBorderPoint;if(We.defined(M)){var N=M.index;a.push(N,p-1,p,p,m,N)}n.lastBorderPoint=l}}return h(function(e,t){e.ellipsoid=ke.Ellipsoid.clone(e.ellipsoid),e.rectangle=ke.Rectangle.clone(e.rectangle);var i=function(e,t,i,r,a,n,o,s,u,c){var d,h,l,g,m,p;p=We.defined(r)?(d=r.west,h=r.south,l=r.east,g=r.north,m=r.width,r.height):(d=Oe.CesiumMath.toRadians(a.west),h=Oe.CesiumMath.toRadians(a.south),l=Oe.CesiumMath.toRadians(a.east),g=Oe.CesiumMath.toRadians(a.north),m=Oe.CesiumMath.toRadians(r.width),Oe.CesiumMath.toRadians(r.height));var I,f,v=[h,g],E=[d,l],T=Ve.Transforms.eastNorthUpToFixedFrame(t,i),C=Ve.Matrix4.inverseTransformation(T,tt);s&&(I=Ue.WebMercatorProjection.geodeticLatitudeToMercatorAngle(h),f=1/(Ue.WebMercatorProjection.geodeticLatitudeToMercatorAngle(g)-I));var M=new DataView(e),N=Number.POSITIVE_INFINITY,x=Number.NEGATIVE_INFINITY,b=$e;b.x=Number.POSITIVE_INFINITY,b.y=Number.POSITIVE_INFINITY,b.z=Number.POSITIVE_INFINITY;var w=et;w.x=Number.NEGATIVE_INFINITY,w.y=Number.NEGATIVE_INFINITY,w.z=Number.NEGATIVE_INFINITY;var P,S,B=0,y=0,A=0;for(S=0;S<4;++S){var R=B;P=M.getUint32(R,!0),R+=qe;var _=Oe.CesiumMath.toRadians(180*M.getFloat64(R,!0));R+=Je,-1===Ke(E,_)&&E.push(_);var F=Oe.CesiumMath.toRadians(180*M.getFloat64(R,!0));R+=Je,-1===Ke(v,F)&&v.push(F),R+=2*Je;var W=M.getInt32(R,!0);R+=ze,y+=W,W=M.getInt32(R,!0),A+=3*W,B+=P+qe}var O=[],k=[],V=new Array(y),Y=new Array(y),U=new Array(y),L=s?new Array(y):[],H=new Array(A),j=[],D=[],G=[],z=[],q=0,Q=0;for(S=B=0;S<4;++S){P=M.getUint32(B,!0);var J=B+=qe,K=Oe.CesiumMath.toRadians(180*M.getFloat64(B,!0));B+=Je;var X=Oe.CesiumMath.toRadians(180*M.getFloat64(B,!0));B+=Je;var Z=Oe.CesiumMath.toRadians(180*M.getFloat64(B,!0)),$=.5*Z;B+=Je;var ee=Oe.CesiumMath.toRadians(180*M.getFloat64(B,!0)),te=.5*ee;B+=Je;var ie=M.getInt32(B,!0);B+=ze;var re=M.getInt32(B,!0);B+=ze,B+=ze;for(var ae=new Array(ie),ne=0;ne<ie;++ne){var oe=K+M.getUint8(B++)*Z;Xe.longitude=oe;var se=X+M.getUint8(B++)*ee;Xe.latitude=se;var ue=M.getFloat32(B,!0);if(B+=Qe,0!==ue&&ue<c&&(ue*=-Math.pow(2,u)),ue*=6371010*n,Xe.height=ue,-1!==Ke(E,oe)||-1!==Ke(v,se)){var ce=Ke(O,Xe,ke.Cartographic);if(-1!==ce){ae[ne]=k[ce];continue}O.push(ke.Cartographic.clone(Xe)),k.push(q)}ae[ne]=q,Math.abs(oe-d)<$?j.push({index:q,cartographic:ke.Cartographic.clone(Xe)}):Math.abs(oe-l)<$?G.push({index:q,cartographic:ke.Cartographic.clone(Xe)}):Math.abs(se-h)<te?D.push({index:q,cartographic:ke.Cartographic.clone(Xe)}):Math.abs(se-g)<te&&z.push({index:q,cartographic:ke.Cartographic.clone(Xe)}),N=Math.min(ue,N),x=Math.max(ue,x),U[q]=ue;var de=i.cartographicToCartesian(Xe);V[q]=de,s&&(L[q]=(Ue.WebMercatorProjection.geodeticLatitudeToMercatorAngle(se)-I)*f),Ve.Matrix4.multiplyByPoint(C,de,Ze),ke.Cartesian3.minimumByComponent(Ze,b,b),ke.Cartesian3.maximumByComponent(Ze,w,w);var he=(oe-d)/(l-d);he=Oe.CesiumMath.clamp(he,0,1);var le=(se-h)/(g-h);le=Oe.CesiumMath.clamp(le,0,1),Y[q]=new ke.Cartesian2(he,le),++q}for(var ge=3*re,me=0;me<ge;++me,++Q)H[Q]=ae[M.getUint16(B,!0)],B+=Ge;if(P!==B-J)throw new Ye.RuntimeError("Invalid terrain tile.")}V.length=q,Y.length=q,U.length=q,s&&(L.length=q);var pe=q,Ie=Q,fe={hMin:N,lastBorderPoint:void 0,skirtHeight:o,toENU:C,ellipsoid:i,minimum:b,maximum:w};j.sort(function(e,t){return t.cartographic.latitude-e.cartographic.latitude}),D.sort(function(e,t){return e.cartographic.longitude-t.cartographic.longitude}),G.sort(function(e,t){return e.cartographic.latitude-t.cartographic.latitude}),z.sort(function(e,t){return t.cartographic.longitude-e.cartographic.longitude});var ve=1e-5;if(it(V,U,Y,L,H,fe,j,-ve*m,!0,-ve*p),it(V,U,Y,L,H,fe,D,-ve*p,!1),it(V,U,Y,L,H,fe,G,ve*m,!0,ve*p),it(V,U,Y,L,H,fe,z,ve*p,!1),0<j.length&&0<z.length){var Ee=j[0].index,Te=pe,Ce=z[z.length-1].index,Me=V.length-1;H.push(Ce,Me,Te,Te,Ee,Ce)}y=V.length;var Ne,xe=Ve.BoundingSphere.fromPoints(V);We.defined(r)&&r.width<Oe.CesiumMath.PI_OVER_TWO+Oe.CesiumMath.EPSILON5&&(Ne=He.OrientedBoundingBox.fromRectangle(r,N,x,i));for(var be=new je.EllipsoidalOccluder(i).computeHorizonCullingPoint(t,V),we=new Le.AxisAlignedBoundingBox(b,w,t),Pe=new De.TerrainEncoding(we,fe.hMin,x,T,!1,s),Se=new Float32Array(y*Pe.getStride()),Be=0,ye=0;ye<y;++ye)Be=Pe.encode(Se,Be,V[ye],Y[ye],U[ye],void 0,L[ye]);var Ae=j.map(function(e){return e.index}).reverse(),Re=D.map(function(e){return e.index}).reverse(),_e=G.map(function(e){return e.index}).reverse(),Fe=z.map(function(e){return e.index}).reverse();return Re.unshift(_e[_e.length-1]),Re.push(Ae[0]),Fe.unshift(Ae[Ae.length-1]),Fe.push(_e[0]),{vertices:Se,indices:new Uint16Array(H),noskirtIndices:new Uint16Array(H.slice(0,Ie)),maximumHeight:x,minimumHeight:N,encoding:Pe,boundingSphere3D:xe,orientedBoundingBox:Ne,occludeePointInScaledSpace:be,vertexCountWithoutSkirts:pe,skirtIndex:Ie,westIndicesSouthToNorth:Ae,southIndicesEastToWest:Re,eastIndicesNorthToSouth:_e,northIndicesWestToEast:Fe}}(e.buffer,e.relativeToCenter,e.ellipsoid,e.rectangle,e.nativeRectangle,e.exaggeration,e.skirtHeight,e.includeWebMercatorT,e.negativeAltitudeExponentBias,e.negativeElevationThreshold),r=i.vertices;t.push(r.buffer);var a=i.indices;t.push(a.buffer);var n=i.noskirtIndices;return t.push(n.buffer),{vertices:r.buffer,indices:a.buffer,noskirtIndices:n.buffer,numberOfAttributes:i.encoding.getStride(),minimumHeight:i.minimumHeight,maximumHeight:i.maximumHeight,boundingSphere3D:i.boundingSphere3D,orientedBoundingBox:i.orientedBoundingBox,occludeePointInScaledSpace:i.occludeePointInScaledSpace,encoding:i.encoding,vertexCountWithoutSkirts:i.vertexCountWithoutSkirts,skirtIndex:i.skirtIndex,westIndicesSouthToNorth:i.westIndicesSouthToNorth,southIndicesEastToWest:i.southIndicesEastToWest,eastIndicesNorthToSouth:i.eastIndicesNorthToSouth,northIndicesWestToEast:i.northIndicesWestToEast}})});
