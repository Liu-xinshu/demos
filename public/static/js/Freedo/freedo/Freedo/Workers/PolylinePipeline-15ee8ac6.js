/**
 * Cesium - https://github.com/AnalyticalGraphicsInc/cesium
 *
 * Copyright 2011-2017 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md for full licensing details.
 */
define(["exports","./defined-b9ff0e39","./Check-e6691f86","./defaultValue-199f5aa8","./Math-92bd3539","./Cartesian2-8fa798b8","./objectToQuery-2e382d4d","./Transforms-c1305e13","./IntersectionTests-0268f2ee","./Plane-c6867c84","./EllipsoidRhumbLine-fb5cc30d","./EllipsoidGeodesic-b8e7c0c6"],function(a,T,e,w,P,y,b,v,m,A,E,r){"use strict";var S={numberOfPoints:function(a,e,r){var t=y.Cartesian3.distance(a,e);return Math.ceil(t/r)},numberOfPointsRhumbLine:function(a,e,r){var t=Math.pow(a.longitude-e.longitude,2)+Math.pow(a.latitude-e.latitude,2);return Math.ceil(Math.sqrt(t/(r*r)))}},o=new y.Cartographic;S.extractHeights=function(a,e){for(var r=a.length,t=new Array(r),i=0;i<r;i++){var n=a[i];t[i]=e.cartesianToCartographic(n,o).height}return t};var R=new v.Matrix4,M=new y.Cartesian3,D=new y.Cartesian3,G=new A.Plane(y.Cartesian3.UNIT_X,0),x=new y.Cartesian3,N=new A.Plane(y.Cartesian3.UNIT_X,0),I=new y.Cartesian3,V=new y.Cartesian3,k=[];function L(a,e,r){var t,i=k;if(i.length=a,e===r){for(t=0;t<a;t++)i[t]=e;return i}var n=(r-e)/a;for(t=0;t<a;t++){var o=e+t*n;i[t]=o}return i}var _=new y.Cartographic,O=new y.Cartographic,B=new y.Cartesian3,U=new y.Cartesian3,z=new y.Cartesian3,X=new r.EllipsoidGeodesic,q=new E.EllipsoidRhumbLine;function W(a,e,r,t,i,n,o,s){var c=t.scaleToGeodeticSurface(a,U),l=t.scaleToGeodeticSurface(e,z),u=S.numberOfPoints(a,e,r),f=t.cartesianToCartographic(c,_),h=t.cartesianToCartographic(l,O),d=L(u,i,n);X.setEndPoints(f,h);var C=X.surfaceDistance/u,g=s;f.height=i;var p=t.cartographicToCartesian(f,B);y.Cartesian3.pack(p,o,g),g+=3;for(var v=1;v<u;v++){var m=X.interpolateUsingSurfaceDistance(v*C,O);m.height=d[v],p=t.cartographicToCartesian(m,B),y.Cartesian3.pack(p,o,g),g+=3}return g}function Y(a,e,r,t,i,n,o,s){var c=t.scaleToGeodeticSurface(a,U),l=t.scaleToGeodeticSurface(e,z),u=t.cartesianToCartographic(c,_),f=t.cartesianToCartographic(l,O),h=S.numberOfPointsRhumbLine(u,f,r),d=L(h,i,n);q.ellipsoid.equals(t)||(q=new E.EllipsoidRhumbLine(void 0,void 0,t)),q.setEndPoints(u,f);var C=q.surfaceDistance/h,g=s;u.height=i;var p=t.cartographicToCartesian(u,B);y.Cartesian3.pack(p,o,g),g+=3;for(var v=1;v<h;v++){var m=q.interpolateUsingSurfaceDistance(v*C,O);m.height=d[v],p=t.cartographicToCartesian(m,B),y.Cartesian3.pack(p,o,g),g+=3}return g}S.wrapLongitude=function(a,e){var r=[],t=[];if(T.defined(a)&&0<a.length){e=w.defaultValue(e,v.Matrix4.IDENTITY);var i=v.Matrix4.inverseTransformation(e,R),n=v.Matrix4.multiplyByPoint(i,y.Cartesian3.ZERO,M),o=y.Cartesian3.normalize(v.Matrix4.multiplyByPointAsVector(i,y.Cartesian3.UNIT_Y,D),D),s=A.Plane.fromPointNormal(n,o,G),c=y.Cartesian3.normalize(v.Matrix4.multiplyByPointAsVector(i,y.Cartesian3.UNIT_X,x),x),l=A.Plane.fromPointNormal(n,c,N),u=1;r.push(y.Cartesian3.clone(a[0]));for(var f=r[0],h=a.length,d=1;d<h;++d){var C=a[d];if(A.Plane.getPointDistance(l,f)<0||A.Plane.getPointDistance(l,C)<0){var g=m.IntersectionTests.lineSegmentPlane(f,C,s,I);if(T.defined(g)){var p=y.Cartesian3.multiplyByScalar(o,5e-9,V);A.Plane.getPointDistance(s,f)<0&&y.Cartesian3.negate(p,p),r.push(y.Cartesian3.add(g,p,new y.Cartesian3)),t.push(u+1),y.Cartesian3.negate(p,p),r.push(y.Cartesian3.add(g,p,new y.Cartesian3)),u=1}}r.push(y.Cartesian3.clone(a[d])),u++,f=C}t.push(u)}return{positions:r,lengths:t}},S.generateArc=function(a){T.defined(a)||(a={});var e=a.positions,r=e.length,t=w.defaultValue(a.ellipsoid,y.Ellipsoid.WGS84),i=w.defaultValue(a.height,0),n=b.isArray(i);if(r<1)return[];if(1===r){var o=t.scaleToGeodeticSurface(e[0],U);if(0!==(i=n?i[0]:i)){var s=t.geodeticSurfaceNormal(o,B);y.Cartesian3.multiplyByScalar(s,i,s),y.Cartesian3.add(o,s,o)}return[o.x,o.y,o.z]}var c=a.minDistance;if(!T.defined(c)){var l=w.defaultValue(a.granularity,P.CesiumMath.RADIANS_PER_DEGREE);c=P.CesiumMath.chordLength(l,t.maximumRadius)}var u,f=0;for(u=0;u<r-1;u++)f+=S.numberOfPoints(e[u],e[u+1],c);var h=3*(f+1),d=new Array(h),C=0;for(u=0;u<r-1;u++){C=W(e[u],e[u+1],c,t,n?i[u]:i,n?i[u+1]:i,d,C)}k.length=0;var g=e[r-1],p=t.cartesianToCartographic(g,_);p.height=n?i[r-1]:i;var v=t.cartographicToCartesian(p,B);return y.Cartesian3.pack(v,d,h-3),d};var j=new y.Cartographic,H=new y.Cartographic;S.generateRhumbArc=function(a){T.defined(a)||(a={});var e=a.positions,r=e.length,t=w.defaultValue(a.ellipsoid,y.Ellipsoid.WGS84),i=w.defaultValue(a.height,0),n=b.isArray(i);if(r<1)return[];if(1===r){var o=t.scaleToGeodeticSurface(e[0],U);if(0!==(i=n?i[0]:i)){var s=t.geodeticSurfaceNormal(o,B);y.Cartesian3.multiplyByScalar(s,i,s),y.Cartesian3.add(o,s,o)}return[o.x,o.y,o.z]}var c,l,u=w.defaultValue(a.granularity,P.CesiumMath.RADIANS_PER_DEGREE),f=0,h=t.cartesianToCartographic(e[0],j);for(c=0;c<r-1;c++)l=t.cartesianToCartographic(e[c+1],H),f+=S.numberOfPointsRhumbLine(h,l,u),h=y.Cartographic.clone(l,j);var d=3*(f+1),C=new Array(d),g=0;for(c=0;c<r-1;c++){g=Y(e[c],e[c+1],u,t,n?i[c]:i,n?i[c+1]:i,C,g)}k.length=0;var p=e[r-1],v=t.cartesianToCartographic(p,_);v.height=n?i[r-1]:i;var m=t.cartographicToCartesian(v,B);return y.Cartesian3.pack(m,C,d-3),C},S.generateCartesianArc=function(a){for(var e=S.generateArc(a),r=e.length/3,t=new Array(r),i=0;i<r;i++)t[i]=y.Cartesian3.unpack(e,3*i);return t},S.generateCartesianRhumbArc=function(a){for(var e=S.generateRhumbArc(a),r=e.length/3,t=new Array(r),i=0;i<r;i++)t[i]=y.Cartesian3.unpack(e,3*i);return t},a.PolylinePipeline=S});
