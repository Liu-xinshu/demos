/**
 * Cesium - https://github.com/AnalyticalGraphicsInc/cesium
 *
 * Copyright 2011-2017 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md for full licensing details.
 */
define(["./defined-b9ff0e39","./Check-e6691f86","./freezeObject-2d5b18ce","./defaultValue-199f5aa8","./Math-92bd3539","./Cartesian2-8fa798b8","./defineProperties-ae15c9d5","./objectToQuery-2e382d4d","./Transforms-c1305e13","./RuntimeError-d5522ee3","./WebGLConstants-554ddbe2","./ComponentDatatype-569c1e3e","./when-c208a7cf","./AttributeCompression-4cb3e905","./IndexDatatype-7119db15","./IntersectionTests-0268f2ee","./Plane-c6867c84","./WebMercatorProjection-3d8e7edb","./createTaskProcessorWorker","./EllipsoidTangentPlane-29b9a994","./OrientedBoundingBox-dd67ef28","./TerrainEncoding-d3ac3c0e"],function(xe,e,t,r,Ce,be,i,n,Me,a,o,s,c,Ne,ve,we,d,Ae,h,Ee,Se,Pe){"use strict";var Fe=32767,Be=new be.Cartesian3,Ve=new be.Cartesian3,We=new be.Cartesian3,Oe=new be.Cartographic,ke=new be.Cartesian2,He=new be.Cartesian3,_e=new Me.Matrix4,Ye=new Me.Matrix4;function ze(e,t,r,i,n,a,o,s,c){var d=Number.POSITIVE_INFINITY,h=n.north,u=n.south,m=n.east,I=n.west;m<I&&(m+=Ce.CesiumMath.TWO_PI);for(var l=e.length,g=0;g<l;++g){var T=e[g],f=r[T],p=i[T];Oe.longitude=Ce.CesiumMath.lerp(I,m,p.x),Oe.latitude=Ce.CesiumMath.lerp(u,h,p.y),Oe.height=f-t;var y=a.cartographicToCartesian(Oe,Be);Me.Matrix4.multiplyByPoint(o,y,y),be.Cartesian3.minimumByComponent(y,s,s),be.Cartesian3.maximumByComponent(y,c,c),d=Math.min(d,Oe.height)}return d}function je(e,t,r,i,n,a,o,s,c,d,h,u,m,I,l,g,T,f){var p,y,x;x=m?(p=n.length-1,y=-1):(p=0,y=n.length,1);var C=-1,b=xe.defined(c),M=t/a.getStride(),N=h.north,v=h.south,w=h.east,A=h.west;w<A&&(w+=Ce.CesiumMath.TWO_PI);for(var E=p;E!==y;E+=x){var S=n[E],P=o[S],F=s[S];Oe.longitude=Ce.CesiumMath.lerp(A,w,F.x)+T,Oe.latitude=Ce.CesiumMath.lerp(v,N,F.y)+f,Oe.height=P-u;var B,V=d.cartographicToCartesian(Oe,Be);if(b){var W=2*S;if(ke.x=c[W],ke.y=c[1+W],1!==I){var O=Ne.AttributeCompression.octDecode(ke.x,ke.y,He),k=Me.Transforms.eastNorthUpToFixedFrame(Be,d,Ye),H=Me.Matrix4.inverseTransformation(k,_e);Me.Matrix4.multiplyByPointAsVector(H,O,O),O.z*=I,be.Cartesian3.normalize(O,O),Me.Matrix4.multiplyByPointAsVector(k,O,O),be.Cartesian3.normalize(O,O),Ne.AttributeCompression.octEncode(O,ke)}}a.hasWebMercatorT&&(B=(Ae.WebMercatorProjection.geodeticLatitudeToMercatorAngle(Oe.latitude)-l)*g),t=a.encode(e,t,V,F,Oe.height,ke,B),-1!==C&&(r[i++]=C,r[i++]=M-1,r[i++]=S,r[i++]=M-1,r[i++]=M,r[i++]=S),C=S,++M}return i}function Re(e,t){var r;return"function"==typeof e.slice&&"function"!=typeof(r=e.slice()).sort&&(r=void 0),xe.defined(r)||(r=Array.prototype.slice.call(e)),r.sort(t),r}return h(function(e,t){var r,i,n=e.quantizedVertices,a=n.length/3,o=e.octEncodedNormals,s=e.westIndices.length+e.eastIndices.length+e.southIndices.length+e.northIndices.length,c=e.includeWebMercatorT,d=e.rectangle,h=e.constraintRegions,u=we.IntersectionTests.intersetRectangleWithConstraintRegion(d,h),m=d.west,I=d.south,l=d.east,g=d.north,T=be.Ellipsoid.clone(e.ellipsoid),f=e.exaggeration,p=e.minimumHeight*f,y=e.maximumHeight*f,x=e.relativeToCenter,C=Me.Transforms.eastNorthUpToFixedFrame(x,T),b=Me.Matrix4.inverseTransformation(C,new Me.Matrix4);c&&(r=Ae.WebMercatorProjection.geodeticLatitudeToMercatorAngle(I),i=1/(Ae.WebMercatorProjection.geodeticLatitudeToMercatorAngle(g)-r));var M=n.subarray(0,a),N=n.subarray(a,2*a),v=n.subarray(2*a,3*a),w=xe.defined(o),A=new Array(a),E=new Array(a),S=new Array(a),P=c?new Array(a):[],F=Ve;F.x=Number.POSITIVE_INFINITY,F.y=Number.POSITIVE_INFINITY,F.z=Number.POSITIVE_INFINITY;var B=We;B.x=Number.NEGATIVE_INFINITY,B.y=Number.NEGATIVE_INFINITY,B.z=Number.NEGATIVE_INFINITY;for(var V=Number.POSITIVE_INFINITY,W=Number.NEGATIVE_INFINITY,O=Number.POSITIVE_INFINITY,k=Number.NEGATIVE_INFINITY,H=0;H<a;++H){var _=M[H],Y=N[H],z=_/Fe,j=Y/Fe,R=Ce.CesiumMath.lerp(p,y,v[H]/Fe);if(Oe.longitude=Ce.CesiumMath.lerp(m,l,z),Oe.latitude=Ce.CesiumMath.lerp(I,g,j),Oe.height=R,-1!==u){var D=we.IntersectionTests.isCartographicInConstraintRegion(Oe,u,h);-1!==D&&("ERASE"===h[D].eraseType?R=h[D].height:"OFFSET"===h[D].eraseType?R+=h[D].height:"SMOOTH"===h[D].eraseType&&(R=we.IntersectionTests.interoplateCartographicWhenSmooth(Oe,h[D]))<h[D].height&&(R=h[D].height),Oe.height=R)}V=Math.min(Oe.longitude,V),W=Math.max(Oe.longitude,W),O=Math.min(Oe.latitude,O),k=Math.max(Oe.latitude,k);var G=T.cartographicToCartesian(Oe);A[H]=new be.Cartesian2(z,j),E[H]=R,S[H]=G,c&&(P[H]=(Ae.WebMercatorProjection.geodeticLatitudeToMercatorAngle(Oe.latitude)-r)*i),Me.Matrix4.multiplyByPoint(b,G,Be),be.Cartesian3.minimumByComponent(Be,F,F),be.Cartesian3.maximumByComponent(Be,B,B)}var L,U,q=Re(e.westIndices,function(e,t){return A[e].y-A[t].y}),Q=Re(e.eastIndices,function(e,t){return A[t].y-A[e].y}),J=Re(e.southIndices,function(e,t){return A[t].x-A[e].x}),K=Re(e.northIndices,function(e,t){return A[e].x-A[t].x});1!==f&&(U=Me.BoundingSphere.fromPoints(S),L=Se.OrientedBoundingBox.fromRectangle(d,p,y,T));var X=p;X=Math.min(X,ze(e.westIndices,e.westSkirtHeight,E,A,d,T,b,F,B)),X=Math.min(X,ze(e.southIndices,e.southSkirtHeight,E,A,d,T,b,F,B)),X=Math.min(X,ze(e.eastIndices,e.eastSkirtHeight,E,A,d,T,b,F,B)),X=Math.min(X,ze(e.northIndices,e.northSkirtHeight,E,A,d,T,b,F,B));for(var Z=new Ee.AxisAlignedBoundingBox(F,B,x),$=new Pe.TerrainEncoding(Z,X,y,C,w,c),ee=$.getStride(),te=new Float32Array(a*ee+s*ee),re=0,ie=0;ie<a;++ie){if(w){var ne=2*ie;if(ke.x=o[ne],ke.y=o[1+ne],1!==f){var ae=Ne.AttributeCompression.octDecode(ke.x,ke.y,He),oe=Me.Transforms.eastNorthUpToFixedFrame(S[ie],T,Ye),se=Me.Matrix4.inverseTransformation(oe,_e);Me.Matrix4.multiplyByPointAsVector(se,ae,ae),ae.z*=f,be.Cartesian3.normalize(ae,ae),Me.Matrix4.multiplyByPointAsVector(oe,ae,ae),be.Cartesian3.normalize(ae,ae),Ne.AttributeCompression.octEncode(ae,ke)}}re=$.encode(te,re,S[ie],A[ie],E[ie],ke,P[ie])}var ce=Math.max(0,2*(s-4)),de=e.indices.length+3*ce,he=ve.IndexDatatype.createTypedArray(a+s,de);he.set(e.indices,0);var ue=ve.IndexDatatype.createTypedArray(a+s,e.indices.length);ue.set(e.indices,0);var me=1e-4*(W-V),Ie=1e-4*(k-O),le=-me,ge=me,Te=Ie,fe=-Ie,pe=a*ee,ye=e.indices.length;return ye=je(te,pe,he,ye,e.westIndices,$,E,A,o,T,d,e.westSkirtHeight,!0,f,r,i,le,0),ye=je(te,pe+=e.westIndices.length*ee,he,ye,e.southIndices,$,E,A,o,T,d,e.southSkirtHeight,!1,f,r,i,0,fe),ye=je(te,pe+=e.southIndices.length*ee,he,ye,e.eastIndices,$,E,A,o,T,d,e.eastSkirtHeight,!1,f,r,i,ge,0),je(te,pe+=e.eastIndices.length*ee,he,ye,e.northIndices,$,E,A,o,T,d,e.northSkirtHeight,!0,f,r,i,0,Te),t.push(te.buffer,he.buffer),{vertices:te.buffer,indices:he.buffer,noskirtIndices:ue.buffer,westIndicesSouthToNorth:q,southIndicesEastToWest:J,eastIndicesNorthToSouth:Q,northIndicesWestToEast:K,vertexStride:ee,center:x,minimumHeight:p,maximumHeight:y,boundingSphere:U,orientedBoundingBox:L,encoding:$,skirtIndex:e.indices.length}})});
