/**
 * Cesium - https://github.com/AnalyticalGraphicsInc/cesium
 *
 * Copyright 2011-2017 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md for full licensing details.
 */
define(["./defined-b9ff0e39","./Check-e6691f86","./freezeObject-2d5b18ce","./defaultValue-199f5aa8","./Math-92bd3539","./RuntimeError-d5522ee3","./WebGLConstants-554ddbe2","./ComponentDatatype-569c1e3e","./when-c208a7cf","./IndexDatatype-7119db15","./createTaskProcessorWorker"],function(A,e,r,t,n,l,a,b,o,f,i){"use strict";var m;function w(e,r,t){var n,a,o=e.num_points();if(t){var i=e.num_faces(),u=new m.DracoInt32Array;a=3*i,n=f.IndexDatatype.createTypedArray(o,a);for(var s=0,d=0;d<i;++d)r.GetFaceFromMesh(e,d,u),n[s+0]=u.GetValue(0),n[s+1]=u.GetValue(1),n[s+2]=u.GetValue(2),s+=3;m.destroy(u)}else{a=o,n=f.IndexDatatype.createTypedArray(o,a);for(s=0,d=0;d<o;++d)n[s+0]=d,s+=1}return{typedArray:n,numberOfIndices:a}}function I(e,r,t,n){var a,o=e.num_points(),i=t.num_components(),u=new m.AttributeQuantizationTransform;if(u.InitFromAttribute(t)){for(var s=new Array(i),d=0;d<i;++d)s[d]=u.min_value(d);a={quantizationBits:u.quantization_bits(),minValues:s,range:u.range(),octEncoded:!1}}m.destroy(u),(u=new m.AttributeOctahedronTransform).InitFromAttribute(t)&&(a={quantizationBits:u.quantization_bits(),octEncoded:!0}),m.destroy(u);var f,c=o*i;f=A.defined(a)?function(e,r,t,n,a){var o,i;n.quantizationBits<=8?(i=new m.DracoUInt8Array,o=new Uint8Array(a),r.GetAttributeUInt8ForAllPoints(e,t,i)):(i=new m.DracoUInt16Array,o=new Uint16Array(a),r.GetAttributeUInt16ForAllPoints(e,t,i));for(var u=0;u<a;++u)o[u]=i.GetValue(u);return m.destroy(i),o}(e,r,t,a,c):function(e,r,t,n,a){var o,i;switch(t.data_type()){case 1:case 11:i=new m.DracoInt8Array,o=new Int8Array(n),r.GetAttributeInt8ForAllPoints(e,t,i);break;case 2:i=new m.DracoUInt8Array,o=new Uint8Array(n),r.GetAttributeUInt8ForAllPoints(e,t,i);break;case 3:i=new m.DracoInt16Array,o=new Int16Array(n),r.GetAttributeInt16ForAllPoints(e,t,i);break;case 4:i=new m.DracoUInt16Array,o=new Uint16Array(n),r.GetAttributeUInt16ForAllPoints(e,t,i);break;case 5:case 7:i=new m.DracoInt32Array,o=new Int32Array(n),r.GetAttributeInt32ForAllPoints(e,t,i);break;case 6:case 8:i=new m.DracoUInt32Array,o=new Uint32Array(n),r.GetAttributeUInt32ForAllPoints(e,t,i);break;case 9:case 10:i=new m.DracoFloat32Array,o=new Float32Array(n),r.GetAttributeFloatForAllPoints(e,t,i)}for(var u=0;u<n;++u)o[u]=i.GetValue(u);if("COLOR_0"!==a)return m.destroy(i),o;var s=new Float32Array(4*n);for(u=0;u<n;++u)s[u]=o[u]/255;return s}(e,r,t,c,n);var y=b.ComponentDatatype.fromTypedArray(f);return{array:f,data:{componentsPerAttribute:i,componentDatatype:y,byteOffset:t.byte_offset(),byteStride:b.ComponentDatatype.getSizeInBytes(y)*i,normalized:t.normalized(),quantization:a}}}function u(e){return A.defined(e.primitive)?function(e){var r=new m.Decoder,t=["POSITION","NORMAL","COLOR","TEX_COORD"];if(e.dequantizeInShader)for(var n=0;n<t.length;++n)r.SkipAttributeTransform(m[t[n]]);var a=e.bufferView,o=new m.DecoderBuffer;o.Init(e.array,a.byteLength);var i=r.GetEncodedGeometryType(o);if(i==m.TRIANGULAR_MESH){var u=new m.Mesh;if(!(b=r.DecodeBufferToMesh(o,u)).ok()||0===u.ptr)throw new l.RuntimeError("Error decoding draco mesh geometry: "+b.error_msg());m.destroy(o);var s={},d=e.compressedAttributes;for(var f in d)if(d.hasOwnProperty(f)){var c=d[f],y=r.GetAttributeByUniqueId(u,c);s[f]=I(u,r,y,f)}var A={indexArray:w(u,r,!0),attributeData:s}}else if(i===m.POINT_CLOUD){var b;u=new m.PointCloud;if(!(b=r.DecodeBufferToPointCloud(o,u)).ok()||0===u.ptr)throw new l.RuntimeError("Error decoding draco mesh geometry: "+b.error_msg());m.destroy(o);s={},d=e.compressedAttributes;for(var f in d)if(d.hasOwnProperty(f)){c=d[f],y=r.GetAttributeByUniqueId(u,c);s[f]=I(u,r,y,f)}A={indexArray:w(u,r,!1),attributeData:s}}return m.destroy(u),m.destroy(r),A}(e):function(e){var r=new m.Decoder;e.dequantizeInShader&&(r.SkipAttributeTransform(m.POSITION),r.SkipAttributeTransform(m.NORMAL));var t=new m.DecoderBuffer;if(t.Init(e.buffer,e.buffer.length),r.GetEncodedGeometryType(t)!==m.POINT_CLOUD)throw new l.RuntimeError("Draco geometry type must be POINT_CLOUD.");var n=new m.PointCloud,a=r.DecodeBufferToPointCloud(t,n);if(!a.ok()||0===n.ptr)throw new l.RuntimeError("Error decoding draco point cloud: "+a.error_msg());m.destroy(t);var o={},i=e.properties;for(var u in i)if(i.hasOwnProperty(u)){var s=i[u],d=r.GetAttributeByUniqueId(n,s);o[u]=I(n,r,d,u)}return m.destroy(n),m.destroy(r),o}(e)}function s(e){m=e,self.onmessage=i(u),self.postMessage(!0)}return function(e){var r=e.data.webAssemblyConfig;if(A.defined(r))return require([r.modulePath],function(e){A.defined(r.wasmBinaryFile)?(A.defined(e)||(e=self.DracoDecoderModule),e(r).then(function(e){s(e)})):s(e())})}});
